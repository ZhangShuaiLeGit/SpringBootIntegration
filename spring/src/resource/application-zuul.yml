zuul:
  debug:
    request: false
    logfile: true
  #  SendErrorFilter:
  #    error:
  #      disable: true
  host:
    # 网关最大链接数（网关最大链接数 <= 每个路由最大链接数 * 路由个数）
    max-total-connections: 8000
    # 每个路由最大链接数
    max-per-route-connections: 1000
  # 服务名匹配表达式，定义不自动创建路由的规则（默认情况下所有 Eureka 上的服务都会被 Zuul 自动地创建映射关系来进行路由，推荐配置为*）
  ignored-services: '*'
  # 设置不希望被 API 网关进行路由的 URL 表达式
  ignored-patterns: '/i/**'
  # hystrix 熔断隔离策略，在 Zuul 网关内建议配置为 THREAD-线程隔离
  ribbon-isolation-strategy: THREAD
  thread-pool:
    # service 使用独立的线程池，建议配置为 true
    use-separate-thread-pools: true
    # hystrix command 的 threadPoolKey 前缀，在 Zuul 中 threadPoolKey = $thread-pool-key-prefix + $commandKey
    thread-pool-key-prefix: eurekaRegister-zuulpool-
  # 路由map配置，查询接口：/routes?format=details
  routes:
    # 路由id，应全局唯一
    r-eureka-server1:
      # 需要转发的目的 service id，上游注册在 Eureka 中的 serivice id
      service-id: eureka-server1
      # 匹配请求路由的 pattern（如果与其他 route 的 path 有包含关系，应确保约束性强的 route 配置块在前）
      path: '/api/server/**'
      # 转发请求时是否忽略前缀: （http://$host1/api/video/list -> http://$host2/video/list）
      strip-prefix: false
      # 路由是否支持失败重试 （需要 spring retry 和 ribbon 支持）
      retryable: false
    r-eureka-clinet1:
      # 需要转发的目的 service id，上游注册在 Eureka 中的 serivice id
      service-id: eureka-client1
      # 匹配请求路由的 pattern（如果与其他 route 的 path 有包含关系，应确保约束性强的 route 配置块在前）
      path: '/api/client/**'
      # 转发请求时是否忽略前缀: （http://$host1/api/user/list -> http://$host2/user/list）
      strip-prefix: false
      # 路由是否支持失败重试 （需要 spring retry 和 ribbon 支持）
      retryable: false
    r-eureka-server2:
      # 需要转发的目的 service id，上游注册在 Eureka 中的 serivice id
      service-id: eureka-server2
      # 匹配请求路由的 pattern（如果与其他 route 的 path 有包含关系，应确保约束性强的 route 配置块在前）
      path: '/api/**'
      # 转发请求时是否忽略前缀: （http://$host1/api/user/list -> http://$host2/user/list）
      strip-prefix: false
      # 路由是否支持失败重试 （需要 spring retry 和 ribbon 支持）
      retryable: false
#    r-letv-mas-config-apollo-doc:
#      # 需要转发的目的 service id，上游注册在 Eureka 中的 serivice id
#      #      service-id: r-letv-mas-config-apollo
#      # 匹配请求路由的 pattern（如果与其他 route 的 path 有包含关系，应确保约束性强的 route 配置块在前）
#      path: '/letv-mas-config-apollo-api-docs/**'
#      url: http://10.112.33.35:8911
#      # 转发请求时是否忽略前缀: （http://$host1/api/user/list -> http://$host2/user/list）
#      strip-prefix: true
#    r-static-html:
#      path: '/static/**'
#      url: http://i.static.itv.letv.com/
#      # 转发请求时是否忽略前缀: （http://$host1/api/user/list -> http://$host2/user/list）
#      strip-prefix: true
#      # 路由是否支持失败重试 （需要 spring retry 和 ribbon 支持）
#      retryable: false
#    r-local:
#      path: '/'
#      url: forward:/i
#    r-local-info:
#      path: '/local/**'
#      #      url: http://10.58.95.3:9001
#      service-id: letv-mas-router-tvproxy
#      strip-prefix: true

server:
  port: 1119

eureka:
  instance:
    hostname: zuul
    instance-id: eurekaRegister:${spring.application.name}:${server.port}
    metadata-map:
      # [HA-P配置]-当前服务实例的zone
      zone: ${SERVER_ZONE:bj-2}
      #config bus refresh index
      index: ${spring.application.index:127.0.0.1}
  client:
    # [HA-P配置]-当前服务实例的region
    region: ${SERVER_REGION:cn-bj}
    # [HA-P配置]-开启当前服务实例优先发现同zone的注册中心，默认为true
    prefer-same-zone-eureka: true
    # [HA配置]-可用zone内注册中心地址列表
    availability-zones:
      cn-bj: ${eureka.instance.metadata-map.zone},bj-1
    serviceUrl:
      bj-2: http://eurekaRegister:zhangshuai@peer1:1112/eureka
      #      defaultZone: http://eurekaRegister:zhangshuai@peer2:1112/eureka
      defaultZone: ''

spring:
  application:
    name: eureka-zuul

# Ribbon 全局配置
ribbon:
  # 启用的 HTTP Client 实现，推荐使用 okhttp
  okhttp:
    enabled: true
  # 链接超时时间
  ConnectTimeout: 200
  # 响应超时时间 （应确保：（链接超时+响应超时应）* 最大总重试次数 <= 熔断超时）
  ReadTimeout: 1500
  # 是否在所有操作异常时重试
  OkToRetryOnAllOperations: false
  retryableStatusCodes: 500,502
  # 最大本地重试次数，前提OkToRetryOnAllOperations＝true
  MaxAutoRetries: 1
  # 最大重选 Server 次数，前提OkToRetryOnAllOperations＝true（最大总重试次数 = 最大本地重试次数 * 最大重选 Server 次数；总调用次数 = （最大本地重试次数+1）* 最大重选 Server 次数）
  MaxAutoRetriesNextServer: 1

#  com.netflix.loadbalancer.RandomRule：从提供服务的实例中以随机的方式；
#  com.netflix.loadbalancer.RoundRobinRule：以线性轮询的方式，就是维护一个计数器，从提供服务的实例中按顺序选取，第一次选第一个，第二次选第二个，以此类推，到最后一个以后再从头来过；
#  com.netflix.loadbalancer.RetryRule：在RoundRobinRule的基础上添加重试机制，即在指定的重试时间内，反复使用线性轮询策略来选择可用实例；
#  com.netflix.loadbalancer.WeightedResponseTimeRule：对RoundRobinRule的扩展，响应速度越快的实例选择权重越大，越容易被选择；
#  com.netflix.loadbalancer.BestAvailableRule：选择并发较小的实例；
#  com.netflix.loadbalancer.AvailabilityFilteringRule：先过滤掉故障实例，再选择并发较小的实例；
#  com.netflix.loadbalancer.ZoneAwareLoadBalancer：采用双重过滤，同时过滤不是同一区域的实例和故障实例，选择并发较小的实例。

# 根据上游的serviceid来指定其ribbon配置
eureka-server1:
  ribbon:
    # 同 Ribbon 全局配置，service 配置优先
    ConnectTimeout: 200
    # 同 Ribbon 全局配置，service 配置优先
    ReadTimeout: 1500
    # 负载均衡策略NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RandomRule #修改负载均衡算法
    NFLoadBalancerRuleClassName: com.letv.router.rule.MetadataWeightedRule
    # 同 Ribbon 全局配置，service 配置优先
    OkToRetryOnAllOperations: false
    retryableStatusCodes: 500,502
    # 同 Ribbon 全局配置，service 配置优先
    MaxAutoRetries: 0
    # 同 Ribbon 全局配置，service 配置优先
    MaxAutoRetriesNextServer: 0

# 根据上游的serviceid来指定其ribbon配置
eureka-clinet1:
  ribbon:
    # 同 Ribbon 全局配置，service 配置优先
    ConnectTimeout: 200
    # 同 Ribbon 全局配置，service 配置优先
    ReadTimeout: 1500
    # 负载均衡策略NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RandomRule #修改负载均衡算法
    NFLoadBalancerRuleClassName: com.letv.router.rule.MetadataWeightedRule
    # 同 Ribbon 全局配置，service 配置优先
    OkToRetryOnAllOperations: false
    retryableStatusCodes: 500,502
    # 同 Ribbon 全局配置，service 配置优先
    MaxAutoRetries: 0
    # 同 Ribbon 全局配置，service 配置优先
    MaxAutoRetriesNextServer: 0

# 根据上游的serviceid来指定其ribbon配置
eureka-server2:
  ribbon:
    # 同 Ribbon 全局配置，service 配置优先
    ConnectTimeout: 200
    # 同 Ribbon 全局配置，service 配置优先
    ReadTimeout: 1500
    # 负载均衡策略NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RandomRule #修改负载均衡算法
    NFLoadBalancerRuleClassName: com.letv.router.rule.MetadataWeightedRule
    # 同 Ribbon 全局配置，service 配置优先
    OkToRetryOnAllOperations: false
    retryableStatusCodes: 500,502
    # 同 Ribbon 全局配置，service 配置优先
    MaxAutoRetries: 0
    # 同 Ribbon 全局配置，service 配置优先
    MaxAutoRetriesNextServer: 0

